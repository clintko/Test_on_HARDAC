method = sample (Default)
  sample
    num_samples = 1000 (Default)
    num_warmup = 50
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      gamma = 0.050000000000000003 (Default)
      delta = 0.80000000000000004 (Default)
      kappa = 0.75 (Default)
      t0 = 10 (Default)
      init_buffer = 75 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      hmc
        engine = nuts (Default)
          nuts
            max_depth = 10 (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1 (Default)
        stepsize_jitter = 0 (Default)
id = 0 (Default)
data
  file = ./laplacian_prior/psi0.json
init = 2 (Default)
random
  seed = 3005149479 (Default)
output
  file = ./laplacian_prior/output0.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = -1 (Default)
  profile_file = profile.csv (Default)


Gradient evaluation took 4.5e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.45 seconds.
Adjust your expectations accordingly!


WARNING: There aren't enough warmup iterations to fit the
         three stages of adaptation as currently configured.
         Reducing each adaptation stage to 15%/75%/10% of
         the given number of warmup iterations:
           init_buffer = 7
           adapt_window = 38
           term_buffer = 5

Iteration:    1 / 1050 [  0%]  (Warmup)
Iteration:   51 / 1050 [  4%]  (Sampling)
Iteration:  150 / 1050 [ 14%]  (Sampling)
Iteration:  250 / 1050 [ 23%]  (Sampling)
Iteration:  350 / 1050 [ 33%]  (Sampling)
Iteration:  450 / 1050 [ 42%]  (Sampling)
Iteration:  550 / 1050 [ 52%]  (Sampling)
Iteration:  650 / 1050 [ 61%]  (Sampling)
Iteration:  750 / 1050 [ 71%]  (Sampling)
Iteration:  850 / 1050 [ 80%]  (Sampling)
Iteration:  950 / 1050 [ 90%]  (Sampling)
Iteration: 1050 / 1050 [100%]  (Sampling)

 Elapsed Time: 0.005 seconds (Warm-up)
               0.049 seconds (Sampling)
               0.054 seconds (Total)

